{"version":3,"sources":["Components/CheckedBrands/CheckedBrands.module.css","common/Preloader/Preloader.module.css","App.module.css","common/PriceSelection/PriceSelection.module.css","Components/PriceChecked/PriceChecked.module.css","Components/Categories/Categories.module.css","common/Paginator/Paginator.module.css","Components/CardsProduct/CardProduct.module.css","api/api.ts","Redux/app_reducer.ts","Redux/Brands_reducer.ts","common/Preloader/Preloader.tsx","Components/CheckedBrands/CheckedBrands.tsx","common/PriceSelection/PriceSelection.tsx","common/Slider/Slider.tsx","Redux/card_reducer.ts","Components/PriceChecked/PriceChecked.tsx","Components/TotalProduct/TotalProduct.tsx","Components/Categories/Categories.tsx","Components/SettingProduct/SettingProduct.tsx","common/Paginator/Paginator.tsx","assect/user_Photo.jpg","assect/default (Stroke).svg","Components/CardsProduct/Card/Card.tsx","Components/CardsProduct/CardProduct.tsx","App.tsx","reportWebVitals.ts","Redux/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","fullApi","getBrands","page","min","max","get","params","getProducts","this","setAppStatus","status","type","initState","requestError","brandsInitState","data","categories","definition_type","filters","links","first","last","next","prev","meta","current_page","from","last_page","path","per_page","to","total","products","result","Preloader","className","s","preloaderPage","preloader","CheckedBrands","filtersBrands","useSelector","state","brandsReducer","appStatus","appReducer","dispatch","useDispatch","useState","othersBrands","setOthersBrands","mappedBrands","filter","f","slug","map","items","index","style","titleBrand","title","value","isNew","isPromo","useEffect","then","res","payload","finally","onChange","PriceSelection","wrapperSpan","useStyles","makeStyles","root","width","thumbColorPrimary","GlobalCss","withStyles","background","border","color","RangeSlider","onDrop","classes","Slider","onMouseUp","step","aria-labelledby","cardInitState","getCard","card","console","log","PriceChecked","p","minPrice","maxPrice","React","setValue","event","newValue","TotalProduct","totalProduct","Categories","c","id","SettingProduct","Paginator","currentPage","pageSize","portionSize","totalCount","setCurrentPage","pageCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","selectedPage","Card","blockCard","bl","link","href","new","newT","image","src","desktop","x1","nullPhoto","alt","infoPriceBlock","price","footerCard","but","w","CardProduct","cardReducer","setPageNumber","useCallback","blockCards","is_new","onPageChanged","App","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","actions","action","errorText","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10081547.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"CheckedBrands_title__9uKHj\",\"titleBrand\":\"CheckedBrands_titleBrand__2HcEw\",\"isNew\":\"CheckedBrands_isNew__1-Slr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderPage\":\"Preloader_preloaderPage__2nruz\",\"preloader\":\"Preloader_preloader__3QT1f\",\"load4\":\"Preloader_load4__2QH3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__4SXRe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperSpan\":\"PriceSelection_wrapperSpan__wNOvA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PriceChecked_title__p-tu7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"categories\":\"Categories_categories__3ZYJE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3DHmp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockCards\":\"CardProduct_blockCards__2l9Xx\",\"blockCard\":\"CardProduct_blockCard__kHVRk\",\"bl\":\"CardProduct_bl__2pHt6\",\"link\":\"CardProduct_link__FvkLE\",\"new\":\"CardProduct_new__1LKxo\",\"newT\":\"CardProduct_newT__2cdEx\",\"title\":\"CardProduct_title__14tnR\",\"infoPriceBlock\":\"CardProduct_infoPriceBlock__1FgMV\",\"price\":\"CardProduct_price__3Kt15\",\"image\":\"CardProduct_image__rXDrW\",\"footerCard\":\"CardProduct_footerCard__N7mFl\",\"but\":\"CardProduct_but__20V2d\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: 'https://getlens-master.stage.dev.family/api/pages',\r\n\t//baseURL: 'https://getlens-master.stage.dev.family/api/pages/kamery',\r\n})\r\n\r\nexport type fullType = {\r\n\tdata: responseType\r\n}\r\nexport type responseType = {\r\n\tcategories: Array<responseCategoriesType>,\r\n\tdefinition_type: string\r\n\tfilters: Array<responseFilterType>\r\n\tlinks: responseLinksType\r\n\tmeta: responseMetaType\r\n\tproducts: Array<responseProductsType>\r\n\tresult: string\r\n}\r\ntype responseCategoriesType = {\r\n\tchildren: Array<responseChildrenType>\r\n\ticon: string\r\n\tid: number\r\n\timage: object\r\n\tslug: string\r\n\ttitle: string\r\n}\r\ntype responseChildrenType = {\r\n\tid: number\r\n\ttitle: string\r\n\tslug: string\r\n}\r\nexport type responseFilterType = {\r\n\tinfo: null\r\n\titems: Array<responseFilterItemType>\r\n\tmax: string | null\r\n\tmin: string | null\r\n\tslug: string\r\n\ttitle: string\r\n\ttype: string\r\n}\r\ntype responseFilterItemType = {\r\n\tmain: boolean\r\n\ttitle: string\r\n\tvalue: string\r\n}\r\ntype responseLinksType = {\r\n\tfirst: string\r\n\tlast: string\r\n\tnext: string\r\n\tprev: null | string\r\n}\r\nexport type responseMetaType = {\r\n\tcurrent_page: number\r\n\tfrom: number\r\n\tlast_page: number\r\n\tpath: string\r\n\tper_page: number\r\n\tto: number\r\n\ttotal: number\r\n}\r\nexport type responseProductsType = {\r\n\tcategory: Array<responseProductsCategoryType>\r\n\tcondition: 5\r\n\tdiscount_trade_in: string\r\n\tid: number\r\n\timage: responseProductsImageType\r\n\tin_stock: true\r\n\tis_new: true\r\n\tis_second_hand: true\r\n\tprice: string\r\n\tslug: string\r\n\ttitle: string\r\n}\r\nexport type responseProductsCategoryType = {\r\n\tid: number\r\n\ttitle: string\r\n\tslug: string\r\n}\r\n\r\ntype responseProductsImageType<T = {x1: string, x2: string, webp_x1: string, webp_x2: string }> = {\r\n\tdesktop: T\r\n\tmobile: T\r\n\ttablet: T\r\n}\r\n\r\nexport const fullApi = {\r\n\tgetBrands(page: number, min?: number, max?: number) {\r\n\t\treturn instance.get<responseType>('/kamery', {\r\n\t\t\tparams: {\r\n\t\t\t\tpage,\r\n\t\t\t\t'price[min]': min,\r\n\t\t\t\t'price[max]': max\r\n\t\t\t}\r\n\t\t})\r\n\t},\r\n\tgetProducts(page: number, min?: number, max?: number) {\r\n\t\treturn this.getBrands(page, min, max)\r\n\t}\r\n}\r\n","// Actions\r\nexport const setAppStatus = (status: RequestStatusType) => ({\r\n\t\ttype: 'cards/app/SET-STATUS', status} as const)\r\ntype setAppStatusType = ReturnType<typeof setAppStatus>\r\nconst setRequestError = (errorText: string | null) => ({\r\n\t\ttype: 'cards/app/SET-REQUEST-ERROR', errorText} as const)\r\ntype setRequestErrorType = ReturnType<typeof setRequestError>\r\n\r\nexport type AppActionsType = setAppStatusType | setRequestErrorType\r\n\r\n// State\r\nconst initState: AppInitStateType = {\r\n\tstatus: 'idle',\r\n\trequestError: null\r\n}\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type AppInitStateType = {\r\n\tstatus: RequestStatusType\r\n\trequestError: string | null\r\n}\r\n\r\n// Reducer\r\nexport const appReducer = (state: AppInitStateType = initState, action: AppActionsType): AppInitStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'cards/app/SET-STATUS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status\r\n\t\t\t}\r\n\t\tcase 'cards/app/SET-REQUEST-ERROR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\trequestError: action.errorText\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn {...state}\r\n\t}\r\n}\r\n","import {fullApi, fullType, responseType} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppActionsType, setAppStatus} from \"./app_reducer\";\r\n\r\n// Actions\r\nexport const showBrands = (data: responseType) => ({\r\n\ttype: 'brands/SHOW_BRANDS', payload: {data}\r\n} as const)\r\nexport const setCurrentPage = (currentPage: number) => {\r\n\treturn {type: 'brands/SET_CURRENT_PAGE', currentPage} as const\r\n}\r\n\r\nexport type showActionType = ReturnType<typeof showBrands>\r\nexport type setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport type brandsActionType = showActionType | setCurrentPageType\r\n// State\r\nconst brandsInitState: fullType = {\r\n\tdata: {\r\n\t\tcategories: [],\r\n\t\tdefinition_type: '',\r\n\t\tfilters: [],\r\n\t\tlinks: {\r\n\t\t\tfirst: '',\r\n\t\t\tlast: '',\r\n\t\t\tnext: '',\r\n\t\t\tprev: null\r\n\t\t},\r\n\t\tmeta: {\r\n\t\t\tcurrent_page: 1,\r\n\t\t\tfrom: 1,\r\n\t\t\tlast_page: 9,\r\n\t\t\tpath: 'https://getlens-master.stage.dev.family/api/pages/kamery',\r\n\t\t\tper_page: 24,\r\n\t\t\tto: 24,\r\n\t\t\ttotal: 0,\r\n\t\t},\r\n\t\tproducts: [],\r\n\t\tresult: ''\r\n\t}\r\n}\r\nexport type brandsStateType = typeof brandsInitState\r\n// Reducer\r\nexport const brandsReducer = (state: brandsStateType = brandsInitState, actions: brandsActionType): brandsStateType => {\r\n\tswitch (actions.type) {\r\n\t\tcase \"brands/SHOW_BRANDS\": {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: actions.payload.data\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase \"brands/SET_CURRENT_PAGE\": {\r\n\t\t\tdebugger\r\n\t\t\treturn  {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: {...state.data, meta: {...state.data.meta, current_page: actions.currentPage}}\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n};\r\n// Thunk\r\nexport const fetchBrands = (page: number) => (dispatch: Dispatch<brandsActionType | AppActionsType>) => {\r\n\tdispatch(setAppStatus('loading'))\r\n\treturn fullApi.getBrands(page)\r\n\t\t.then((res) => {\r\n\t\t\tif (res.data.result === 'success') {\r\n\t\t\t\tdispatch(showBrands(res.data))\r\n\t\t\t}\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tdispatch(setAppStatus('succeeded'))\r\n\t\t} )\r\n}\r\n","import React from 'react';\r\nimport s from './Preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n  return <div className={s.preloaderPage}>\r\n    {/*<div className={s.preloaderWrapper}>*/}\r\n      <div className={s.preloader}>Loading...</div>\r\n    {/*</div>*/}\r\n  </div>\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStoreType} from \"../../Redux/store\";\r\nimport {responseFilterType} from \"../../api/api\";\r\nimport {fetchBrands} from \"../../Redux/Brands_reducer\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport style from \"./CheckedBrands.module.css\"\r\n\r\nexport const CheckedBrands = () => {\r\n\tconst filtersBrands = useSelector<RootStoreType, Array<responseFilterType>>(state => state.brandsReducer.data.filters)\r\n\tconst appStatus = useSelector<RootStoreType, string>(state => state.appReducer.status)\r\n\tconst current_page = useSelector<RootStoreType, number>(state => state.brandsReducer.data.meta.current_page)\r\n\tconst dispatch = useDispatch();\r\n\tconst [othersBrands, setOthersBrands] = useState(false)\r\n\tconst mappedBrands = filtersBrands\r\n\t\t.filter((f) => f.slug === 'brands')\r\n\t\t.map(f => f.items.map((f, index) => othersBrands\r\n\t\t\t? <div key={f.value} className={style.titleBrand}>\r\n\t\t\t\t<input type=\"checkbox\"/>\r\n\t\t\t\t<span className={style.titleBrand}>{f.title}</span>\r\n\t\t\t</div>\r\n\t\t\t: (index < 5 && <div key={f.value} className={style.titleBrand}>\r\n            <input type=\"checkbox\" />\r\n            <span className={style.titleBrand}>{f.title}</span>\r\n        </div>)))\r\n\tconst isNew = filtersBrands.filter(f => f.title === 'Новинка').map(f => <div><input type={f.type}/> {f.title}</div>)\r\n\tconst isPromo = filtersBrands.filter(f => f.title === 'Акция').map(f => <div><input type={f.type}/> {f.title}</div>)\r\n\tuseEffect(() => {\r\n\t\tif (current_page) {\r\n\t\t\tdispatch(fetchBrands(current_page))\r\n\t\t}\r\n\t}, [dispatch, current_page])\r\n\tif (appStatus === 'loading') {\r\n\t\treturn <Preloader/>\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3 className={style.title}>Бренд</h3>\r\n\t\t\t{mappedBrands}\r\n\t\t\t<div>\r\n\t\t\t\t{othersBrands\r\n\t\t\t\t\t? <span><input type=\"checkbox\" onChange={() => setOthersBrands(!othersBrands)}/> Другие</span>\r\n\t\t\t\t\t: <span><input type=\"checkbox\" onChange={() => setOthersBrands(!othersBrands)}/> Другие</span>\r\n\t\t\t\t}\r\n\r\n\t\t\t</div>\r\n\t\t\t<div className={style.isNew}>\r\n\t\t\t\t{isNew}\r\n\t\t\t\t{isPromo}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport style from \"./PriceSelection.module.css\"\r\n\r\ntype PriceSelectionPropsType = {\r\n\tmin: number\r\n\tmax: number\r\n}\r\n\r\nexport const PriceSelection: React.FC<PriceSelectionPropsType> = ({min, max}) => {\r\n\treturn (\r\n\t\t<div className={style.wrapperSpan}>\r\n\t\t\t<span>{min}</span>\r\n\t\t\t<span>{max}</span>\r\n\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport {withStyles} from \"@material-ui/core\";\r\n\r\n\r\ntype RangeSliderPropsType = {\r\n\tvalue: number[]\r\n\tmin: number\r\n\tmax: number\r\n\tonChange: (event: any, newValue: number | number[]) => void\r\n\tonDrop: () => void\r\n}\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\twidth: 220,\r\n\t\tthumbColorPrimary: \"red\"\r\n\t},\r\n});\r\n\r\nconst GlobalCss = withStyles({\r\n\t'@global': {\r\n\t\t'.MuiSlider-thumbColorPrimary': {\r\n\t\t\tbackground: '#FFFFFF',\r\n\t\t\tborder: '4px solid #1B1B1B'\r\n\t\t},\r\n\t\t'.MuiSlider-track': {\r\n\t\t\tcolor: '#FF681C'\r\n\t\t}\r\n\t},\r\n})(() => null);\r\n\r\nexport const RangeSlider: React.FC<RangeSliderPropsType> = ({value, onChange, min, max, onDrop}) => {\r\n\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<GlobalCss/>\r\n\t\t\t<Slider\r\n\t\t\t\tonMouseUp={onDrop}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tmin={min}\r\n\t\t\t\tmax={max}\r\n\t\t\t\tstep={100}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\taria-labelledby=\"range-slider\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}","import {fullApi, responseProductsType} from \"../api/api\"\r\nimport {Dispatch} from \"redux\";\r\nimport {AppActionsType} from \"./app_reducer\";\r\n\r\nexport const setCard = (card: Array<responseProductsType>) => ({type: 'cardReducer/SET_CARD', card} as const)\r\ntype setCardType = ReturnType<typeof setCard>\r\nexport type cardActionsType = setCardType\r\nconst cardInitState = {\r\n\tproducts: []\r\n}\r\ntype cardInitStateType = {\r\n\tproducts: Array<responseProductsType>\r\n}\r\nexport const cardReducer = (state: cardInitStateType = cardInitState, actions: cardActionsType): cardInitStateType => {\r\n\tswitch (actions.type) {\r\n\t\tcase \"cardReducer/SET_CARD\": {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tproducts: actions.card\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn state\r\n\t\t}\r\n\t}\r\n}\r\nexport const getCard = (page: number, min?: number, max?: number) => (dispatch: Dispatch<cardActionsType | AppActionsType>) => {\r\n\treturn fullApi.getProducts(page, min, max)\r\n\t\t.then((res) => {\r\n\t\t\tif (res.data.result === 'success') {\r\n\t\t\t\tdispatch(setCard(res.data.products))\r\n\t\t\t\tconsole.log(res.data)\r\n\t\t\t}\r\n\t\t})\r\n}","import React, {useEffect} from 'react';\r\nimport {PriceSelection} from '../../common/PriceSelection/PriceSelection';\r\nimport {RangeSlider} from \"../../common/Slider/Slider\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStoreType} from \"../../Redux/store\";\r\nimport {responseFilterType} from \"../../api/api\";\r\nimport {getCard} from \"../../Redux/card_reducer\";\r\nimport style from \"./PriceChecked.module.css\"\r\n\r\ntype PriceCheckedPropsType = {\r\n\r\n}\r\n\r\nexport const PriceChecked: React.FC<PriceCheckedPropsType> = () => {\r\n\tconst products = useSelector<RootStoreType, Array<responseFilterType>>(state => state.brandsReducer.data.filters)\r\n\tconst title = products.filter(p => p.title === 'Цена').map(p => <h3 key={p.title}>{p.title}, ₽</h3>)\r\n\tconst minPrice = +products.filter(p => p.title === 'Цена').map(p => p.min)\r\n\tconst maxPrice = +products.filter(p => p.title === 'Цена').map(p => p.max)\r\n\r\n\tconst current_page = useSelector<RootStoreType, number>(state => state.brandsReducer.data.meta.current_page)\r\n\tconst dispatch = useDispatch();\r\n\tconst [value, setValue] = React.useState<number[]>([0, 0]);\r\n\tconst min = value[0]\r\n\tconst max = value[1]\r\n\r\n\tconst handleChange = (event: any, newValue: number | number[]) => {\r\n\t\tsetValue(newValue as number[]);\r\n\t};\r\n\t// не передаём в зависимости min, max\r\n\t// будут постоянные запросы на сервер\r\n\tuseEffect(() => {\r\n\t\tdispatch(getCard(current_page, min, max))\r\n\t}, [dispatch, current_page])\r\n\r\n\tconst onDrop = () => {\r\n\t\tdispatch(getCard(current_page, min, max))\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetValue([minPrice, maxPrice])\r\n\t}, [minPrice, maxPrice, setValue])\r\n\r\n\treturn (\r\n\t\t<div >\r\n\t\t\t<span className={style.title}>{title}</span>\r\n\t\t\t<PriceSelection min={min} max={max}/>\r\n\t\t\t<RangeSlider max={maxPrice} min={minPrice} value={value} onChange={handleChange} onDrop={onDrop}/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootStoreType} from \"../../Redux/store\";\r\n\r\nexport const TotalProduct = () => {\r\n\tconst totalProduct = useSelector<RootStoreType, number>(state => state.brandsReducer.data.meta.total)\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tТоваров : {totalProduct}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootStoreType} from \"../../Redux/store\";\r\nimport {responseProductsCategoryType} from \"../../api/api\";\r\nimport style from \"./Categories.module.css\"\r\n\r\nexport const Categories = () => {\r\n\tconst categories = useSelector<RootStoreType, Array<responseProductsCategoryType>>(state => state.brandsReducer.data.categories)\r\n\tconst title = categories.filter(c => c.title === 'Камеры').map(c => <h2 key={c.id}>{c.title}</h2>)\r\n\treturn (\r\n\t\t<div className={style.categories}>\r\n\t\t\t{title}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport {CheckedBrands} from \"../CheckedBrands/CheckedBrands\";\r\nimport {PriceChecked} from \"../PriceChecked/PriceChecked\";\r\nimport {TotalProduct} from \"../TotalProduct/TotalProduct\";\r\nimport {Categories} from \"../Categories/Categories\";\r\n\r\ntype SettingProductPropsType = {\r\n\r\n}\r\nexport const SettingProduct: React.FC<SettingProductPropsType> = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<TotalProduct/>\r\n\t\t\t<Categories/>\r\n\t\t\t<PriceChecked />\r\n\t\t\t<CheckedBrands/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport style from \"./Paginator.module.css\";\r\n\r\ntype UsersPropsType = {\r\n\ttotalCount: number\r\n\tpageSize: number\r\n\tcurrentPage: number\r\n\tportionSize: number\r\n\tonPageChanged: (currentPageNumber: number) => void\r\n\tsetCurrentPage: (pageNumber: number) => void\r\n}\r\nexport const Paginator: React.FC<UsersPropsType> = ({currentPage,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpageSize,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tportionSize= 10 ,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttotalCount,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentPage}) => {\r\n\tconst pageCount: number = Math.ceil(totalCount / pageSize);\r\n\tconst pages: Array<number> = [];\r\n\tfor (let i = 1; i <= pageCount; i++) {\r\n\t\tpages.push(i);\r\n\t}\r\n\tconst portionCount = Math.ceil(pageCount / portionSize)\r\n\tconst [portionNumber, setPortionNumber] = useState(1);\r\n\tconst leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n\tconst rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{ portionNumber > 1 &&\r\n      <button onClick={()=> {setPortionNumber(portionNumber-1)}}>PREV</button>\r\n\t\t\t}\r\n\r\n\t\t\t{pages\r\n\t\t\t\t.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n\t\t\t\t.map((p, index) => {\r\n\t\t\t\treturn <span key={index}\r\n\t\t\t\t\t\t\t\t\t\t className={currentPage === p ? style.selectedPage : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t onClick={() => {setCurrentPage(p)}}> {p} </span>\r\n\t\t\t})}\r\n\r\n\t\t\t{ portionCount > portionNumber &&\r\n      <button onClick={()=> {setPortionNumber(portionNumber+1)}}>NEXT</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}","export default __webpack_public_path__ + \"static/media/user_Photo.62a5ed40.jpg\";","export default __webpack_public_path__ + \"static/media/default (Stroke).26c47d81.svg\";","import React from 'react';\r\nimport style from \"../CardProduct.module.css\";\r\nimport nullPhoto from \"../../../assect/user_Photo.jpg\";\r\nimport w from \"../../../assect/default (Stroke).svg\";\r\nimport {responseProductsType} from \"../../../api/api\";\r\n\r\ntype CardPropsType = {\r\n\tproducts: responseProductsType\r\n\tisNew: boolean\r\n}\r\nexport const Card: React.FC<CardPropsType> = ({products, isNew}) => {\r\n\treturn (\r\n\t\t\t<li className={style.blockCard}>\r\n\t\t\t\t<div className={style.bl}>\r\n\t\t\t\t\t<a className={style.link} href=\"\"/>\r\n\t\t\t\t\t{isNew &&\r\n          <div className={style.new}>\r\n              <div className={style.newT}>Новинка</div>\r\n          </div>}\r\n\t\t\t\t\t<img className={style.image} src={products.image !== null ? products.image.desktop.x1 : nullPhoto} alt=\"#\"/>\r\n\t\t\t\t\t<div className={style.infoPriceBlock}>\r\n\t\t\t\t\t\t<h4 className={style.title}>{products.title}</h4>\r\n\t\t\t\t\t\t<div className={style.price}>{products.price + \"₽\"}</div>\r\n\t\t\t\t\t\t<div className={style.footerCard}>\r\n\t\t\t\t\t\t\t<button className={style.but}>В корзину</button>\r\n\t\t\t\t\t\t\t<img src={w} alt=\"\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t);\r\n};\r\n","import React, {useCallback} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStoreType} from \"../../Redux/store\";\r\nimport {responseProductsType} from \"../../api/api\";\r\nimport style from \"./CardProduct.module.css\"\r\nimport {Paginator} from \"../../common/Paginator/Paginator\";\r\nimport {setCurrentPage} from '../../Redux/Brands_reducer';\r\nimport {Card} from './Card/Card';\r\n\r\nexport const CardProduct = () => {\r\n\tconst products = useSelector<RootStoreType, Array<responseProductsType>>(state => state.cardReducer.products)\r\n\tconst current_page = useSelector<RootStoreType, number>(state => state.brandsReducer.data.meta.current_page)\r\n\tconst per_page = useSelector<RootStoreType, number>(state => state.brandsReducer.data.meta.per_page)\r\n\tconst totalCount = useSelector<RootStoreType, number>(state => state.brandsReducer.data.meta.total)\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst setPageNumber = useCallback((current_page: number) => {\r\n\t\t\tdispatch(setCurrentPage(current_page))\r\n\t}, [dispatch])\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ul className={style.blockCards}>\r\n\t\t\t\t{ products.map( (products) => <Card key={products.id} products={products} isNew={products.is_new}/> ) }\r\n\t\t\t</ul>\r\n\t\t\t<br/>\r\n\t\t\t<Paginator currentPage={current_page}\r\n\t\t\t\t\t\t\t\t pageSize={per_page}\r\n\t\t\t\t\t\t\t\t portionSize={10}\r\n\t\t\t\t\t\t\t\t totalCount={totalCount}\r\n\t\t\t\t\t\t\t\t onPageChanged={()=>{}}\r\n\t\t\t\t\t\t\t\t setCurrentPage={setPageNumber}\r\n\t\t\t/>\r\n\t\t</div>\r\n\r\n\t);\r\n};\r\n","import React from 'react';\nimport style from './App.module.css';\nimport {SettingProduct} from \"./Components/SettingProduct/SettingProduct\";\nimport {CardProduct} from \"./Components/CardsProduct/CardProduct\";\n\nfunction App() {\n\treturn (\n\t\t<div className={style.app}>\n\t\t\t<SettingProduct />\n\t\t\t<CardProduct/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {appReducer} from \"./app_reducer\";\r\nimport {brandsReducer} from \"./Brands_reducer\";\r\nimport {cardReducer} from \"./card_reducer\";\r\n\r\nconst reducer = combineReducers({\r\n\tbrandsReducer: brandsReducer,\r\n\tappReducer: appReducer,\r\n\tcardReducer: cardReducer\r\n})\r\nexport type RootStoreType = ReturnType<typeof reducer>\r\nexport const store = createStore(reducer, applyMiddleware(thunk))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport {store} from \"./Redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}