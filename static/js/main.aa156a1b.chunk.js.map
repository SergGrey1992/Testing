{"version":3,"sources":["Components/CheckedBrands/CheckedBrands.module.css","common/Preloader/Preloader.module.css","App.module.css","common/Paginator/Paginator.module.css","api/api.ts","Redux/app_reducer.ts","Redux/Brands_reducer.ts","common/Preloader/Preloader.tsx","Components/CheckedBrands/CheckedBrands.tsx","common/PriceSelection/PriceSelection.tsx","common/Slider/Slider.tsx","Redux/card_reducer.ts","Components/PriceChecked/PriceChecked.tsx","Components/TotalProduct/TotalProduct.tsx","Components/Categories/Categories.tsx","Components/SettingProduct/SettingProduct.tsx","common/Paginator/Paginator.tsx","assect/user_Photo.jpg","assect/default (Stroke).svg","Components/CardsProduct/Card/Card.tsx","Components/CardsProduct/CardProduct.tsx","App.tsx","reportWebVitals.ts","Redux/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","fullApi","getBrands","page","min","max","get","params","getProducts","this","setAppStatus","status","type","initState","requestError","brandsInitState","data","categories","definition_type","filters","links","first","last","next","prev","meta","current_page","from","last_page","path","per_page","to","total","products","result","Preloader","className","s","preloaderPage","preloader","CheckedBrands","filtersBrands","useSelector","state","brandsReducer","appStatus","appReducer","dispatch","useDispatch","useState","othersBrands","setOthersBrands","checkedBrands","setCheckedBrands","mappedBrands","filter","f","slug","map","items","index","style","titleBrand","checked","id","title","onChange","htmlFor","value","isNew","isPromo","useEffect","then","res","payload","finally","PriceSelectionWrapper","styled","div","Span","span","PriceSelection","useStyles","makeStyles","root","width","thumbColorPrimary","GlobalCss","withStyles","background","border","color","RangeSlider","onDrop","classes","Slider","onTouchEnd","onMouseUp","step","aria-labelledby","cardInitState","getCard","card","console","log","Div","PriceChecked","p","minPrice","maxPrice","React","setValue","event","newValue","TotalProduct","totalProduct","Categories","c","SettingProduct","Paginator","currentPage","pageSize","portionSize","totalCount","setCurrentPage","pageCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","selectedPage","Li","li","NewTitle","ImageProduct","img","DivInfoPriceBlock","H4Title","h4","DivPrice","DivFooterCard","Button","button","Card","src","image","desktop","x1","nullPhoto","alt","price","w","Ul","ul","CardProduct","cardReducer","setPageNumber","useCallback","is_new","onPageChanged","App","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","actions","action","errorText","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa156a1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"CheckedBrands_title__9uKHj\",\"titleBrand\":\"CheckedBrands_titleBrand__2HcEw\",\"isNew\":\"CheckedBrands_isNew__1-Slr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderPage\":\"Preloader_preloaderPage__2nruz\",\"preloader\":\"Preloader_preloader__3QT1f\",\"load4\":\"Preloader_load4__2QH3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__4SXRe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3DHmp\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: 'https://getlens-master.stage.dev.family/api/pages',\r\n\t//baseURL: 'https://getlens-master.stage.dev.family/api/pages/kamery',\r\n})\r\n\r\nexport type fullType = {\r\n\tdata: responseType\r\n}\r\nexport type responseType = {\r\n\tcategories: Array<responseCategoriesType>,\r\n\tdefinition_type: string\r\n\tfilters: Array<responseFilterType>\r\n\tlinks: responseLinksType\r\n\tmeta: responseMetaType\r\n\tproducts: Array<responseProductsType>\r\n\tresult: string\r\n}\r\ntype responseCategoriesType = {\r\n\tchildren: Array<responseChildrenType>\r\n\ticon: string\r\n\tid: number\r\n\timage: object\r\n\tslug: string\r\n\ttitle: string\r\n}\r\ntype responseChildrenType = {\r\n\tid: number\r\n\ttitle: string\r\n\tslug: string\r\n}\r\nexport type responseFilterType = {\r\n\tinfo: null\r\n\titems: Array<responseFilterItemType>\r\n\tmax: string | null\r\n\tmin: string | null\r\n\tslug: string\r\n\ttitle: string\r\n\ttype: string\r\n}\r\ntype responseFilterItemType = {\r\n\tmain: boolean\r\n\ttitle: string\r\n\tvalue: string\r\n}\r\ntype responseLinksType = {\r\n\tfirst: string\r\n\tlast: string\r\n\tnext: string\r\n\tprev: null | string\r\n}\r\nexport type responseMetaType = {\r\n\tcurrent_page: number\r\n\tfrom: number\r\n\tlast_page: number\r\n\tpath: string\r\n\tper_page: number\r\n\tto: number\r\n\ttotal: number\r\n}\r\nexport type responseProductsType = {\r\n\tcategory: Array<responseProductsCategoryType>\r\n\tcondition: 5\r\n\tdiscount_trade_in: string\r\n\tid: number\r\n\timage: responseProductsImageType\r\n\tin_stock: true\r\n\tis_new: true\r\n\tis_second_hand: true\r\n\tprice: string\r\n\tslug: string\r\n\ttitle: string\r\n}\r\nexport type responseProductsCategoryType = {\r\n\tid: number\r\n\ttitle: string\r\n\tslug: string\r\n}\r\n\r\ntype responseProductsImageType<T = {x1: string, x2: string, webp_x1: string, webp_x2: string }> = {\r\n\tdesktop: T\r\n\tmobile: T\r\n\ttablet: T\r\n}\r\n\r\nexport const fullApi = {\r\n\tgetBrands(page: number, min?: number, max?: number) {\r\n\t\treturn instance.get<responseType>('/kamery', {\r\n\t\t\tparams: {\r\n\t\t\t\tpage,\r\n\t\t\t\t'price[min]': min,\r\n\t\t\t\t'price[max]': max\r\n\t\t\t}\r\n\t\t})\r\n\t},\r\n\tgetProducts(page: number, min?: number, max?: number) {\r\n\t\treturn this.getBrands(page, min, max)\r\n\t}\r\n}\r\n","// Actions\r\nexport const setAppStatus = (status: RequestStatusType) => ({\r\n\t\ttype: 'cards/app/SET-STATUS', status} as const)\r\ntype setAppStatusType = ReturnType<typeof setAppStatus>\r\nconst setRequestError = (errorText: string | null) => ({\r\n\t\ttype: 'cards/app/SET-REQUEST-ERROR', errorText} as const)\r\ntype setRequestErrorType = ReturnType<typeof setRequestError>\r\n\r\nexport type AppActionsType = setAppStatusType | setRequestErrorType\r\n\r\n// State\r\nconst initState: AppInitStateType = {\r\n\tstatus: 'idle',\r\n\trequestError: null\r\n}\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type AppInitStateType = {\r\n\tstatus: RequestStatusType\r\n\trequestError: string | null\r\n}\r\n\r\n// Reducer\r\nexport const appReducer = (state: AppInitStateType = initState, action: AppActionsType): AppInitStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'cards/app/SET-STATUS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status\r\n\t\t\t}\r\n\t\tcase 'cards/app/SET-REQUEST-ERROR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\trequestError: action.errorText\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn {...state}\r\n\t}\r\n}\r\n","import {fullApi, fullType, responseType} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppActionsType, setAppStatus} from \"./app_reducer\";\r\n\r\n// Actions\r\nexport const showBrands = (data: responseType) => ({\r\n\ttype: 'brands/SHOW_BRANDS', payload: {data}\r\n} as const)\r\nexport const setCurrentPage = (currentPage: number) => {\r\n\treturn {type: 'brands/SET_CURRENT_PAGE', currentPage} as const\r\n}\r\n\r\nexport type showActionType = ReturnType<typeof showBrands>\r\nexport type setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport type brandsActionType = showActionType | setCurrentPageType\r\n// State\r\nconst brandsInitState: fullType = {\r\n\tdata: {\r\n\t\tcategories: [],\r\n\t\tdefinition_type: '',\r\n\t\tfilters: [],\r\n\t\tlinks: {\r\n\t\t\tfirst: '',\r\n\t\t\tlast: '',\r\n\t\t\tnext: '',\r\n\t\t\tprev: null\r\n\t\t},\r\n\t\tmeta: {\r\n\t\t\tcurrent_page: 1,\r\n\t\t\tfrom: 1,\r\n\t\t\tlast_page: 9,\r\n\t\t\tpath: 'https://getlens-master.stage.dev.family/api/pages/kamery',\r\n\t\t\tper_page: 24,\r\n\t\t\tto: 24,\r\n\t\t\ttotal: 0,\r\n\t\t},\r\n\t\tproducts: [],\r\n\t\tresult: ''\r\n\t}\r\n}\r\nexport type brandsStateType = typeof brandsInitState\r\n// Reducer\r\nexport const brandsReducer = (state: brandsStateType = brandsInitState, actions: brandsActionType): brandsStateType => {\r\n\tswitch (actions.type) {\r\n\t\tcase \"brands/SHOW_BRANDS\": {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: actions.payload.data\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase \"brands/SET_CURRENT_PAGE\": {\r\n\t\t\tdebugger\r\n\t\t\treturn  {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: {...state.data, meta: {...state.data.meta, current_page: actions.currentPage}}\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n};\r\n// Thunk\r\nexport const fetchBrands = (page: number) => (dispatch: Dispatch<brandsActionType | AppActionsType>) => {\r\n\tdispatch(setAppStatus('loading'))\r\n\treturn fullApi.getBrands(page)\r\n\t\t.then((res) => {\r\n\t\t\tif (res.data.result === 'success') {\r\n\t\t\t\tdispatch(showBrands(res.data))\r\n\t\t\t}\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tdispatch(setAppStatus('succeeded'))\r\n\t\t} )\r\n}\r\n","import React from 'react';\r\nimport s from './Preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n  return <div className={s.preloaderPage}>\r\n    {/*<div className={s.preloaderWrapper}>*/}\r\n      <div className={s.preloader}>Loading...</div>\r\n    {/*</div>*/}\r\n  </div>\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStoreType} from \"../../Redux/store\";\r\nimport {responseFilterType} from \"../../api/api\";\r\nimport {fetchBrands} from \"../../Redux/Brands_reducer\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport style from \"./CheckedBrands.module.css\"\r\n\r\nexport const CheckedBrands = () => {\r\n\tconst filtersBrands = useSelector<RootStoreType, Array<responseFilterType>>(state => state.brandsReducer.data.filters)\r\n\tconst appStatus = useSelector<RootStoreType, string>(state => state.appReducer.status)\r\n\tconst current_page = useSelector<RootStoreType, number>(state => state.brandsReducer.data.meta.current_page)\r\n\tconst dispatch = useDispatch();\r\n\tconst [othersBrands, setOthersBrands] = useState(false)\r\n\tconst [checkedBrands, setCheckedBrands] = useState(false)\r\n\tconst mappedBrands = filtersBrands\r\n\t\t.filter((f) => f.slug === 'brands')\r\n\t\t.map(f => f.items.map((f, index) => othersBrands\r\n\t\t\t? <div key={f.value} className={style.titleBrand}>\r\n\t\t\t\t<input type=\"checkbox\" checked={checkedBrands} id={f.title}\r\n\t\t\t\t\t\t\t onChange={() => setCheckedBrands(!checkedBrands)}/>\r\n\t\t\t\t<label htmlFor={f.title}>{f.title}</label>\r\n\t\t\t</div>\r\n\t\t\t: (index < 5 && <div key={f.value} className={style.titleBrand}>\r\n            <input type=\"checkbox\" checked={checkedBrands} id={f.title}\r\n                   onChange={() => setCheckedBrands(!checkedBrands)}/>\r\n            <label htmlFor={f.title}>{f.title}</label>\r\n        </div>)))\r\n\tconst isNew = filtersBrands.filter(f => f.title === 'Новинка').map(f => <div key={f.slug}>\r\n\t\t<input type={f.type}/><label htmlFor={f.title}>{f.title}</label></div>)\r\n\tconst isPromo = filtersBrands.filter(f => f.title === 'Акция').map(f => <div key={f.slug}>\r\n\t\t<input type={f.type}/><label htmlFor={f.title}>{f.title}</label></div>)\r\n\tuseEffect(() => {\r\n\t\tif (current_page) {\r\n\t\t\tdispatch(fetchBrands(current_page))\r\n\t\t}\r\n\t}, [dispatch, current_page])\r\n\tif (appStatus === 'loading') {\r\n\t\treturn <Preloader/>\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3 className={style.title}>Бренд</h3>\r\n\t\t\t{mappedBrands}\r\n\t\t\t<div>\r\n\t\t\t\t{othersBrands\r\n\t\t\t\t\t? <span><input type=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t id={'other'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onChange={() => setOthersBrands(!othersBrands)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t <label htmlFor=\"other\"> Другие</label>\r\n\t\t\t\t</span>\r\n\t\t\t\t\t: <span><input type=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t id={'other'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onChange={() => setOthersBrands(!othersBrands)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor=\"other\"> Другие</label>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<div className={style.isNew}>\r\n\t\t\t\t{isNew}\r\n\t\t\t\t{isPromo}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ntype PriceSelectionPropsType = {\r\n\tmin: number\r\n\tmax: number\r\n}\r\nconst PriceSelectionWrapper = styled.div`\r\n    display: flex;\r\n    border-radius: 4px;\r\n    border: 1px solid #DBDBDB;\r\n    width: 220px;\r\n\t`;\r\nconst Span = styled.span`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 12px;\r\n    width: 112px;\r\n    height: 42px;\r\n    color: #1B1B1B;\r\n    font-weight: 600;\r\n    font-size: 14px;\r\n\t\t&:first-child {\r\n      border-right: 1px solid #DBDBDB\r\n    }\r\n\t`\r\nexport const PriceSelection: React.FC<PriceSelectionPropsType> = ({min, max}) => {\r\n\r\n\treturn (\r\n\t\t<PriceSelectionWrapper>\r\n\t\t\t<Span>{min}</Span>\r\n\t\t\t<Span>{max}</Span>\r\n\t\t</PriceSelectionWrapper>\r\n\t)\r\n}","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport {withStyles} from \"@material-ui/core\";\r\n\r\n\r\ntype RangeSliderPropsType = {\r\n\tvalue: number[]\r\n\tmin: number\r\n\tmax: number\r\n\tonChange: (event: any, newValue: number | number[]) => void\r\n\tonDrop: () => void\r\n}\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\twidth: 220,\r\n\t\tthumbColorPrimary: \"red\"\r\n\t},\r\n});\r\n\r\nconst GlobalCss = withStyles({\r\n\t'@global': {\r\n\t\t'.MuiSlider-thumbColorPrimary': {\r\n\t\t\tbackground: '#FFFFFF',\r\n\t\t\tborder: '4px solid #1B1B1B'\r\n\t\t},\r\n\t\t'.MuiSlider-track': {\r\n\t\t\tcolor: '#FF681C'\r\n\t\t}\r\n\t},\r\n})(() => null);\r\n\r\nexport const RangeSlider: React.FC<RangeSliderPropsType> = ({value, onChange, min, max, onDrop}) => {\r\n\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<GlobalCss/>\r\n\t\t\t<Slider\r\n\t\t\t\tonTouchEnd={onDrop}\r\n\t\t\t\tonMouseUp={onDrop}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tmin={min}\r\n\t\t\t\tmax={max}\r\n\t\t\t\tstep={100}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\taria-labelledby=\"range-slider\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}","import {fullApi, responseProductsType} from \"../api/api\"\r\nimport {Dispatch} from \"redux\";\r\nimport {AppActionsType} from \"./app_reducer\";\r\n\r\nexport const setCard = (card: Array<responseProductsType>) => ({type: 'cardReducer/SET_CARD', card} as const)\r\ntype setCardType = ReturnType<typeof setCard>\r\nexport type cardActionsType = setCardType\r\nconst cardInitState = {\r\n\tproducts: []\r\n}\r\ntype cardInitStateType = {\r\n\tproducts: Array<responseProductsType>\r\n}\r\nexport const cardReducer = (state: cardInitStateType = cardInitState, actions: cardActionsType): cardInitStateType => {\r\n\tswitch (actions.type) {\r\n\t\tcase \"cardReducer/SET_CARD\": {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tproducts: actions.card\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn state\r\n\t\t}\r\n\t}\r\n}\r\nexport const getCard = (page: number, min?: number, max?: number) => (dispatch: Dispatch<cardActionsType | AppActionsType>) => {\r\n\treturn fullApi.getProducts(page, min, max)\r\n\t\t.then((res) => {\r\n\t\t\tif (res.data.result === 'success') {\r\n\t\t\t\tdispatch(setCard(res.data.products))\r\n\t\t\t\tconsole.log(res.data)\r\n\t\t\t}\r\n\t\t})\r\n}","import React, {useEffect} from 'react';\r\nimport {PriceSelection} from '../../common/PriceSelection/PriceSelection';\r\nimport {RangeSlider} from \"../../common/Slider/Slider\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStoreType} from \"../../Redux/store\";\r\nimport {responseFilterType} from \"../../api/api\";\r\nimport {getCard} from \"../../Redux/card_reducer\";\r\nimport styled from \"styled-components\";\r\n\r\ntype PriceCheckedPropsType = {\r\n\r\n}\r\nconst Div = styled.div`\r\n  padding-bottom: 10px;\r\n`\r\nexport const PriceChecked: React.FC<PriceCheckedPropsType> = () => {\r\n\tconst products = useSelector<RootStoreType, Array<responseFilterType>>(state => state.brandsReducer.data.filters)\r\n\tconst title = products.filter(p => p.title === 'Цена').map(p => <h3 key={p.title}>{p.title}, ₽</h3>)\r\n\tconst minPrice = +products.filter(p => p.title === 'Цена').map(p => p.min)\r\n\tconst maxPrice = +products.filter(p => p.title === 'Цена').map(p => p.max)\r\n\r\n\tconst current_page = useSelector<RootStoreType, number>(state => state.brandsReducer.data.meta.current_page)\r\n\tconst dispatch = useDispatch();\r\n\tconst [value, setValue] = React.useState<number[]>([0, 0]);\r\n\tconst min = value[0]\r\n\tconst max = value[1]\r\n\r\n\tconst handleChange = (event: any, newValue: number | number[]) => {\r\n\t\tsetValue(newValue as number[]);\r\n\t};\r\n\t// не передаём в зависимости min, max\r\n\t// будут постоянные запросы на сервер\r\n\tuseEffect(() => {\r\n\t\tdispatch(getCard(current_page, min, max))\r\n\t}, [dispatch, current_page])\r\n\r\n\tconst onDrop = () => {\r\n\t\tdispatch(getCard(current_page, min, max))\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetValue([minPrice, maxPrice])\r\n\t}, [minPrice, maxPrice, setValue])\r\n\r\n\treturn (\r\n\t\t<div >\r\n\t\t\t<Div>{title}</Div>\r\n\t\t\t<PriceSelection min={min} max={max}/>\r\n\t\t\t<RangeSlider max={maxPrice} min={minPrice} value={value} onChange={handleChange} onDrop={onDrop}/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootStoreType} from \"../../Redux/store\";\r\n\r\nexport const TotalProduct = () => {\r\n\tconst totalProduct = useSelector<RootStoreType, number>(state => state.brandsReducer.data.meta.total)\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tТоваров : {totalProduct}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootStoreType} from \"../../Redux/store\";\r\nimport {responseProductsCategoryType} from \"../../api/api\";\r\nimport styled from 'styled-components';\r\nconst Div = styled.div`\r\n    margin-top: 15px;\r\n    margin-bottom: 20px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    font-size: 24px;\r\n    line-height: 140%;\r\n\t`\r\nexport const Categories = () => {\r\n\tconst categories = useSelector<RootStoreType, Array<responseProductsCategoryType>>(state => state.brandsReducer.data.categories)\r\n\tconst title = categories.filter(c => c.title === 'Камеры').map(c => <h2 key={c.id}>{c.title}</h2>)\r\n\r\n\treturn (\r\n\t\t<Div>\r\n\t\t\t{title}\r\n\t\t</Div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport {CheckedBrands} from \"../CheckedBrands/CheckedBrands\";\r\nimport {PriceChecked} from \"../PriceChecked/PriceChecked\";\r\nimport {TotalProduct} from \"../TotalProduct/TotalProduct\";\r\nimport {Categories} from \"../Categories/Categories\";\r\n\r\ntype SettingProductPropsType = {\r\n\r\n}\r\nexport const SettingProduct: React.FC<SettingProductPropsType> = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<TotalProduct/>\r\n\t\t\t<Categories/>\r\n\t\t\t<PriceChecked />\r\n\t\t\t<CheckedBrands/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport style from \"./Paginator.module.css\";\r\n\r\ntype UsersPropsType = {\r\n\ttotalCount: number\r\n\tpageSize: number\r\n\tcurrentPage: number\r\n\tportionSize: number\r\n\tonPageChanged: (currentPageNumber: number) => void\r\n\tsetCurrentPage: (pageNumber: number) => void\r\n}\r\nexport const Paginator: React.FC<UsersPropsType> = ({currentPage,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpageSize,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tportionSize= 10 ,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttotalCount,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentPage}) => {\r\n\tconst pageCount: number = Math.ceil(totalCount / pageSize);\r\n\tconst pages: Array<number> = [];\r\n\tfor (let i = 1; i <= pageCount; i++) {\r\n\t\tpages.push(i);\r\n\t}\r\n\tconst portionCount = Math.ceil(pageCount / portionSize)\r\n\tconst [portionNumber, setPortionNumber] = useState(1);\r\n\tconst leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n\tconst rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{ portionNumber > 1 &&\r\n      <button onClick={()=> {setPortionNumber(portionNumber-1)}}>PREV</button>\r\n\t\t\t}\r\n\r\n\t\t\t{pages\r\n\t\t\t\t.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n\t\t\t\t.map((p, index) => {\r\n\t\t\t\treturn <span key={index}\r\n\t\t\t\t\t\t\t\t\t\t className={currentPage === p ? style.selectedPage : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t onClick={() => {setCurrentPage(p)}}> {p} </span>\r\n\t\t\t})}\r\n\r\n\t\t\t{ portionCount > portionNumber &&\r\n      <button onClick={()=> {setPortionNumber(portionNumber+1)}}>NEXT</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}","export default __webpack_public_path__ + \"static/media/user_Photo.62a5ed40.jpg\";","export default __webpack_public_path__ + \"static/media/default (Stroke).26c47d81.svg\";","import React from 'react';\r\nimport nullPhoto from \"../../../assect/user_Photo.jpg\";\r\nimport w from \"../../../assect/default (Stroke).svg\";\r\nimport {responseProductsType} from \"../../../api/api\";\r\nimport styled from 'styled-components';\r\n\r\ntype CardPropsType = {\r\n\tproducts: responseProductsType\r\n\tisNew: boolean\r\n}\r\nconst Li = styled.li`\r\n  position: relative;\r\n  border-radius: 4px;\r\n  @media only screen and (max-width: 768px) {\r\n    border: none;\r\n    border-radius: 0;\r\n    display: grid;\r\n    grid-template-columns: 2fr 4fr;\r\n    align-self: center;\r\n    justify-self: center;\r\n    align-content: center;\r\n\t\tgap: 0;\r\n    &:before {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      left: calc(-40px);\r\n      display: block;\r\n      width: calc(100% + 80px);\r\n      height: 1px;\r\n      background: rgb(230, 230, 230);\r\n    }\r\n  ;\r\n    &:after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      left: calc(-40px);\r\n      display: block;\r\n      width: calc(100% + 80px);\r\n      height: 1px;\r\n      background: rgb(230, 230, 230);\r\n    }\r\n  ,\r\n  }\r\n`;\r\n\r\nconst NewTitle = styled.span`\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  display: block;\r\n  width: max-content;\r\n  padding: 6px 10px;\r\n  font-size: 10px;\r\n  font-weight: bold;\r\n  letter-spacing: 0.05em;\r\n  text-transform: uppercase;\r\n  border-radius: 26px;\r\n  background: #44C377;\r\n  color: rgb(255, 255, 255);\r\n  @media only screen and (max-width: 768px) {\r\n    top: 16px;\r\n    left: 0;\r\n\t}\r\n\t\t\r\n`;\r\nconst ImageProduct = styled.img`\r\n  max-width: 100%;\r\n  height: auto;\r\n  border-radius: 4px 4px 0 0;\r\n  @media only screen and (max-width: 768px) {\r\n    align-self: center;\r\n    justify-self: center;\r\n\t}\r\n`;\r\nconst DivInfoPriceBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid #E6E6E6;\r\n  padding: 12px 16px 16px;\r\n  border-radius: 0 0 4px 4px;\r\n  border-top: none;\r\n\r\n  @media only screen and (max-width: 800px),(max-width : 768px),(max-width : 600px) {\r\n    padding: 16px;\r\n\t\tborder: none;\r\n  }\r\n`\r\nconst H4Title = styled.h4`\r\n  width: 100%;\r\n  margin-bottom: 30px;\r\n  font-weight: 500;\r\n  color: #1B1B1B;\r\n`\r\nconst DivPrice = styled.div`\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  padding-right: 12px;\r\n  margin-right: auto\r\n`\r\nconst DivFooterCard = styled.div`\r\n  display: grid;\r\n  grid-template-columns: minmax(0px, max-content) 32px;\r\n  gap: 10px;\r\n  -webkit-box-pack: justify;\r\n  justify-content: space-between;\r\n  -webkit-box-align: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding-top: 18px;\r\n  @media only screen and (max-width: 1400px) {\r\n    display: flex;\r\n  }\r\n  @media only screen and (max-width: 1366px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  @media only screen and (max-width: 800px),(max-width : 768px),(max-width : 600px){\r\n    display: grid;\r\n    grid-template-columns: minmax(0px, max-content) 32px;\r\n    gap: 10px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n    padding-top: 18px;\r\n  }\r\n`\r\nconst Button = styled.button`\r\n  width: 106px;\r\n  height: 40px;\r\n  border: 1px solid #DBDBDB;\r\n  box-sizing: border-box;\r\n  border-radius: 8px;\r\n  background-color: white;\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 140%;\r\n  color: #1B1B1B;\r\n`\r\nexport const Card: React.FC<CardPropsType> = ({products, isNew}) => {\r\n\treturn (\r\n\t\t<Li>\r\n\t\t\t<ImageProduct src={products.image ? products.image.desktop.x1 : nullPhoto} alt={'product'}/>\r\n\t\t\t{isNew && <NewTitle>Новинка</NewTitle>}\r\n\t\t\t<DivInfoPriceBlock>\r\n\t\t\t\t<H4Title>{products.title}</H4Title>\r\n\t\t\t\t<DivPrice>{products.price + \"₽\"}</DivPrice>\r\n\t\t\t\t<DivFooterCard>\r\n\t\t\t\t\t<Button>В корзину</Button>\r\n\t\t\t\t\t<img src={w} alt=\"\"/>\r\n\t\t\t\t</DivFooterCard>\r\n\t\t\t</DivInfoPriceBlock>\r\n\t\t</Li>\r\n\t);\r\n};\r\n","import React, {useCallback} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStoreType} from \"../../Redux/store\";\r\nimport {responseProductsType} from \"../../api/api\";\r\nimport {Paginator} from \"../../common/Paginator/Paginator\";\r\nimport {setCurrentPage} from '../../Redux/Brands_reducer';\r\nimport {Card} from './Card/Card';\r\nimport styled from \"styled-components\";\r\n\r\nconst Ul = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, minmax(0px, 1fr));\r\n  gap: 24px;\r\n  @media only screen and (max-width: 1200px) {\r\n    grid-template-columns: repeat(3, minmax(0px, 1fr));\r\n  }\r\n  @media only screen and (max-width: 1023px) {\r\n    grid-template-columns: repeat(2, minmax(0px, 1fr));\r\n  }\r\n  @media only screen and (max-width: 860px) {\r\n    grid-template-columns: repeat(1, minmax(0px, 1fr));\r\n  }\r\n  @media only screen and (max-width: 767px) {\r\n    grid-template-columns: repeat(0, minmax(0px, 1fr));\r\n\t\tgap: 0;\r\n  }\r\n`\r\n\r\n\r\nexport const CardProduct = () => {\r\n\tconst products = useSelector<RootStoreType, Array<responseProductsType>>(state => state.cardReducer.products)\r\n\tconst current_page = useSelector<RootStoreType, number>(state => state.brandsReducer.data.meta.current_page)\r\n\tconst per_page = useSelector<RootStoreType, number>(state => state.brandsReducer.data.meta.per_page)\r\n\tconst totalCount = useSelector<RootStoreType, number>(state => state.brandsReducer.data.meta.total)\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst setPageNumber = useCallback((current_page: number) => {\r\n\t\t\tdispatch(setCurrentPage(current_page))\r\n\t}, [dispatch])\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Ul>\r\n\t\t\t\t{ products.map( (products) => <Card key={products.id} products={products} isNew={products.is_new}/> ) }\r\n\t\t\t</Ul>\r\n\t\t\t<br/>\r\n\t\t\t<Paginator currentPage={current_page}\r\n\t\t\t\t\t\t\t\t pageSize={per_page}\r\n\t\t\t\t\t\t\t\t portionSize={10}\r\n\t\t\t\t\t\t\t\t totalCount={totalCount}\r\n\t\t\t\t\t\t\t\t onPageChanged={()=>{}}\r\n\t\t\t\t\t\t\t\t setCurrentPage={setPageNumber}\r\n\t\t\t/>\r\n\t\t</div>\r\n\r\n\t);\r\n};\r\n","import React from 'react';\nimport style from './App.module.css';\nimport {SettingProduct} from \"./Components/SettingProduct/SettingProduct\";\nimport {CardProduct} from \"./Components/CardsProduct/CardProduct\";\n\nfunction App() {\n\treturn (\n\t\t<div className={style.app}>\n\t\t\t<SettingProduct />\n\t\t\t<CardProduct/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {appReducer} from \"./app_reducer\";\r\nimport {brandsReducer} from \"./Brands_reducer\";\r\nimport {cardReducer} from \"./card_reducer\";\r\n\r\nconst reducer = combineReducers({\r\n\tbrandsReducer: brandsReducer,\r\n\tappReducer: appReducer,\r\n\tcardReducer: cardReducer\r\n})\r\nexport type RootStoreType = ReturnType<typeof reducer>\r\nexport const store = createStore(reducer, applyMiddleware(thunk))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport {store} from \"./Redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}